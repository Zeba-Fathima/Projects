{"cells":[{"cell_type":"markdown","metadata":{"id":"8TxJKiJ707jX"},"source":["# **Citrus Leaf Disease Image Classification**"]},{"cell_type":"markdown","metadata":{"id":"xLT4JP5SpvS8"},"source":["###**Introduction**\n"," * By using Convolutional Neural Networks (CNNs), a powerful subset of deep learning models tailored for image recognition tasks, this implementation aims to accurately identify four distinct categories of citrus leaf diseases: Black spot, Canker, Greening, and Healthy."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oR-tD9JSH4DW"},"outputs":[],"source":["import os\n","import random\n","import shutil\n","from PIL import Image\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import matplotlib.image as mpimg\n","import tensorflow as tf\n","from tensorflow.keras import layers, models\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img, img_to_array\n","from sklearn.preprocessing import LabelEncoder\n","from tensorflow.keras.utils import to_categorical"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22156,"status":"ok","timestamp":1715329593559,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"UzUs8Rs0KLjt","outputId":"19278a2b-679e-4719-d5ce-a054651175a6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","metadata":{"id":"n9yYWYxLWviy"},"source":["# 1. Data Pre-processing"]},{"cell_type":"markdown","metadata":{"id":"VexlLVrDW2AB"},"source":["**1. Data Loading**\n","* Dataset link - https://www.kaggle.com/datasets/myprojectdictionary/citrus-leaf-disease-image"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wT4pgSv7LCfL"},"outputs":[],"source":["base_dir = '/content/drive/My Drive/zap/Citrus Leaf Disease Image'"]},{"cell_type":"markdown","metadata":{"id":"h8x8lxBsXvTz"},"source":["**2. Data Augmentation**\n","* Data augmentation is a technique used to artificially increase the diversity of a dataset by applying transformations such as rotation, scaling, flipping, and cropping to existing data samples.\n","* It is needed in CNN training to improve model generalization, prevent overfitting, and enhance robustness by exposing the model to a wider range of variations and scenarios present in real-world data."]},{"cell_type":"markdown","metadata":{"id":"sGQOJL8ufB75"},"source":["* An ImageDataGenerator instance is created with parameters specifying rotation, shifting, shearing, zooming, flipping, and fill mode for augmentation.\n","* It loops through each subfolder, loads images, and applies augmentation using the generator.\n","* Augmented images are saved with prefixed filenames. This process is repeated for each image in each subfolder, generating five augmented images for each original image."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ioj0PsXtb7h0"},"outputs":[],"source":["datagen = ImageDataGenerator(\n","    rotation_range=20,\n","    width_shift_range=0.2,\n","    height_shift_range=0.2,\n","    shear_range=0.2,\n","    zoom_range=0.2,\n","    horizontal_flip=True,\n","    fill_mode='nearest'\n",")\n","\n","for folder in os.listdir(base_dir):\n","    folder_path = os.path.join(base_dir, folder)\n","    if os.path.isdir(folder_path):\n","        for filename in os.listdir(folder_path):\n","            img_path = os.path.join(folder_path, filename)\n","            img = load_img(img_path)\n","            x = img_to_array(img)\n","            x = x.reshape((1,) + x.shape)\n","\n","            i = 0\n","            for batch in datagen.flow(x, batch_size=1, save_to_dir=folder_path, save_prefix='aug', save_format='png'):\n","                i += 1\n","                if i >= 5:\n","                    break\n"]},{"cell_type":"markdown","metadata":{"id":"-41M9tb4fUhO"},"source":["Printing number of images in each folder"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1714572666947,"user":{"displayName":"Zeba Fathima","userId":"02265588395837893155"},"user_tz":-330},"id":"sCb8P7_-estO","outputId":"35bf288a-aaaa-4d18-a6f9-4cd277b35f2c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Folder 'Canker' contains 943 images.\n","Folder 'Black spot' contains 980 images.\n","Folder 'Healthy' contains 344 images.\n","Folder 'Greening' contains 1168 images.\n"]}],"source":["for folder in os.listdir(base_dir):\n","    folder_path = os.path.join(base_dir, folder)\n","    if os.path.isdir(folder_path):\n","        num_images = len([filename for filename in os.listdir(folder_path) if filename.endswith('.png') ])\n","        print(f\"Folder '{folder}' contains {num_images} images.\")"]},{"cell_type":"markdown","metadata":{"id":"-HgKRoYohVXL"},"source":["**3.Image-Resizing**"]},{"cell_type":"markdown","metadata":{"id":"3gwDW5KW6jzg"},"source":["* Loop through each subdirectory in the base directory\n","* Check if the item is a directory\n","* Loop through each image file in the subdirectory\n","* Check if the file is an image\n","*  Open the image file\n","*  Resize the image\n","* Save the resized image (overwrite the original)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E-CxgO8shZoO"},"outputs":[],"source":["target_width = 224\n","target_height = 224\n","\n","for folder in os.listdir(base_dir):\n","    folder_path = os.path.join(base_dir, folder)\n","    if os.path.isdir(folder_path):\n","        for filename in os.listdir(folder_path):\n","            if filename.endswith('.png'):\n","                img_path = os.path.join(folder_path, filename)\n","                img = Image.open(img_path)\n","                resized_img = img.resize((target_width, target_height))\n","                resized_img.save(img_path)\n","                # print(f\"Resized {filename} in '{folder}' to {target_width}x{target_height} pixels.\")"]},{"cell_type":"markdown","metadata":{"id":"7tpqyYneShUe"},"source":["# 2.Model Implementation"]},{"cell_type":"markdown","metadata":{"id":"2191awIiSyIP"},"source":["**Test-Train Splitting**"]},{"cell_type":"markdown","metadata":{"id":"FwGwnRqgSlnV"},"source":["* Directory Creation: It creates two directories within the specified base_dir - one for training data (train_dir) and another for validation data (validation_dir). If these directories already exist, it does not raise an error (exist_ok=True).\n","* Class-wise Data Splitting: It iterates over each class directory within the base_dir. For each class, it lists all the images (class_images) in that class directory.\n","* Shuffling: It shuffles the list of image filenames within each class directory to introduce randomness in the data.\n","* Validation Data Selection: It calculates the number of images to be moved to the validation directory based on the validation_split ratio. It then moves the specified percentage of images from each class to the validation directory while maintaining the class-wise directory structure.\n","* Training Data Selection: The remaining images (after selecting the validation set) are moved to the training directory.\n","* Directory Structure Preservation: During the move operation, it creates the necessary subdirectories within the train_dir and validation_dir to maintain the original class-wise directory structure.\n","* Output: Finally, it returns the paths of the training and validation directories (train_dir and validation_dir) to the caller."]},{"cell_type":"markdown","metadata":{"id":"a12C6k2QXcGw"},"source":["**shutil module**\n","* The shutil module in Python provides a higher-level interface for file operations, including copying and moving files or entire directory trees.\n","* In the code the shutil.move() function is used to move image files from one directory to another."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pF6qhrh1Q17z"},"outputs":[],"source":["# def custom_data_preprocessing(base_dir, validation_split=0.2):\n","#     train_dir = os.path.join(base_dir, 'Train')\n","#     validation_dir = os.path.join(base_dir, 'Validation')\n","#     os.makedirs(train_dir, exist_ok=True)\n","#     os.makedirs(validation_dir, exist_ok=True)\n","\n","#     for class_name in os.listdir(base_dir):\n","#         class_images = os.listdir(os.path.join(base_dir, class_name))\n","#         random.shuffle(class_images)\n","#         num_validation = int(len(class_images) * validation_split)\n","\n","#         for image_name in class_images[:num_validation]:\n","#             src = os.path.join(base_dir, class_name, image_name)\n","#             dest = os.path.join(validation_dir, class_name, image_name)\n","#             if not os.path.exists(dest):  # Check if destination does not exist\n","#                 os.makedirs(os.path.dirname(dest), exist_ok=True)\n","#                 shutil.move(src, dest)+\n","\n","#         for image_name in class_images[num_validation:]:\n","#             src = os.path.join(base_dir, class_name, image_name)\n","#             dest = os.path.join(train_dir, class_name, image_name)\n","#             if not os.path.exists(dest):  # Check if destination does not exist\n","#                 os.makedirs(os.path.dirname(dest), exist_ok=True)\n","#                 shutil.move(src, dest)\n","\n","#     return train_dir, validation_dir"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DyZUhA3kW_QA"},"outputs":[],"source":["# train_dir, validation_dir = custom_data_preprocessing(base_dir)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UcuiCgNsDwCG"},"outputs":[],"source":["train_dir = '/content/drive/My Drive/zap/Train'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tNS_ARNGD2jU"},"outputs":[],"source":["validation_dir = '/content/drive/My Drive/zap/Validation'"]},{"cell_type":"markdown","metadata":{"id":"Z3lUN9mPsL4x"},"source":["Printing the sub-directories and number of images inside each subdirectory in the Train folder"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6251,"status":"ok","timestamp":1715329784140,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"Nt5EgMM78Uop","outputId":"98480623-236c-4db7-bbf1-f2104f0b1053"},"outputs":[{"name":"stdout","output_type":"stream","text":["Folder 'Canker' contains 755 images.\n","Folder 'Black spot' contains 784 images.\n","Folder 'Healthy' contains 276 images.\n","Folder 'Greening' contains 935 images.\n"]}],"source":["base_dir = '/content/drive/My Drive/zap/Train'\n","for folder in os.listdir(base_dir):\n","    folder_path = os.path.join(base_dir, folder)\n","    if os.path.isdir(folder_path):\n","        num_images = len([filename for filename in os.listdir(folder_path) if filename.endswith('.png') ])\n","        print(f\"Folder '{folder}' contains {num_images} images.\")"]},{"cell_type":"markdown","metadata":{"id":"1PBuobv-srcK"},"source":["Printing the sub-directories and number of images inside each subdirectory in the Validation folder"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2369,"status":"ok","timestamp":1715329789093,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"Nfvn9R4P_XTn","outputId":"b87acddd-d313-4d59-cec0-45726a44faeb"},"outputs":[{"name":"stdout","output_type":"stream","text":["Folder 'Canker' contains 188 images.\n","Folder 'Black spot' contains 196 images.\n","Folder 'Healthy' contains 68 images.\n","Folder 'Greening' contains 233 images.\n"]}],"source":["base_dir = '/content/drive/My Drive/zap/Validation'\n","for folder in os.listdir(base_dir):\n","    folder_path = os.path.join(base_dir, folder)\n","    if os.path.isdir(folder_path):\n","        num_images = len([filename for filename in os.listdir(folder_path) if filename.endswith('.png') ])\n","        print(f\"Folder '{folder}' contains {num_images} images.\")"]},{"cell_type":"markdown","metadata":{"id":"uEt03087tkuZ"},"source":["* img_width and img_height determine the input image size, typically set to 224x224 pixels.\n","*  num_classes represents the number of distinct categories the model will predict\n","*  batch_size controls the number of samples processed in each training iteration\n","* epochs defines the number of complete passes through the dataset during training."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gRUs4SJXCsii"},"outputs":[],"source":["img_width = 224\n","img_height = 224\n","num_classes = 4\n","batch_size = 32\n","epochs = 5"]},{"cell_type":"markdown","metadata":{"id":"kR1iKauOpClW"},"source":["**Label-encoding**"]},{"cell_type":"markdown","metadata":{"id":"eVRGW5uCXv0q"},"source":["* The load_images_from_directory function loads images directly from the directories specified by train_dir and validation_dir.\n","* It loops through each subdirectory (which corresponds to a class) within the main directory, loads the images, and converts them into NumPy arrays.\n","* Labels are assigned based on the subdirectory names.\n","* The LabelEncoder is used to encode the class labels into categorical format.\n","* The images and labels are loaded separately for both training and validation datasets"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u-xtWhfmPlFi"},"outputs":[],"source":["def load_images_from_directory(directory, img_width, img_height):\n","    images = []\n","    labels = []\n","    label_encoder = LabelEncoder()\n","\n","    for label_name in os.listdir(directory):\n","        label = label_name\n","        label_dir = os.path.join(directory, label_name)\n","        for img_filename in os.listdir(label_dir):\n","            img_path = os.path.join(label_dir, img_filename)\n","            img = load_img(img_path, target_size=(img_width, img_height))\n","            img_array = img_to_array(img)\n","            images.append(img_array)\n","            labels.append(label)\n","\n","    # Convert labels to categorical format\n","    labels = label_encoder.fit_transform(labels)\n","    labels = to_categorical(labels)\n","\n","    return np.array(images), labels"]},{"cell_type":"markdown","metadata":{"id":"ykPBCoGuuA0I"},"source":["Loads images from the directories and converts them into NumPy arrays, along with their corresponding labels."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SKIAfkrDP5nb"},"outputs":[],"source":["X_train, y_train = load_images_from_directory(train_dir, img_width, img_height)\n","X_val, y_val = load_images_from_directory(validation_dir, img_width, img_height)"]},{"cell_type":"markdown","metadata":{"id":"_clsm1oZX-zk"},"source":["The pixel values of the images are normalized to the range [0, 1]."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F2WPw0rgWxQH"},"outputs":[],"source":["X_train = X_train / 255.0\n","X_val = X_val / 255.0"]},{"cell_type":"markdown","metadata":{"id":"NPTB-YXcuWH_"},"source":["# Model-1"]},{"cell_type":"markdown","metadata":{"id":"cuTbVeZlu_Et"},"source":["* Two convolutional layers with ReLU activation functions followed by max-pooling layers.\n","* A Flatten layer to convert the 2D output of the convolutional layers into a 1D vector.\n","* A fully connected Dense layer with 512 units and ReLU activation.\n","* A Dropout layer with a dropout rate of 0.25 to reduce overfitting.\n","* Finally, a Dense output layer with softmax activation for multiclass classification."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CmYPk2m9YvKs"},"outputs":[],"source":["model_1 = Sequential([\n","    Conv2D(32, (3, 3), activation='relu', input_shape=(img_width, img_height, 3)),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Flatten(),\n","    Dense(512, activation='relu'),\n","    Dropout(0.25),\n","    Dense(num_classes, activation='softmax')\n","])\n"]},{"cell_type":"markdown","metadata":{"id":"ezEhnQtLu1JD"},"source":["* Compiles the defined model using the\n"," * optimizer (Adam),\n"," * the loss function (categorical cross-entropy),\n"," * and the evaluation metric (accuracy)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8hsZh0OUYyio"},"outputs":[],"source":["model_1.compile(optimizer=Adam(),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n"]},{"cell_type":"markdown","metadata":{"id":"wWIQ_58cvdM4"},"source":["* Compiled model is trained on the training data (X_train, y_train) for the specified number of epochs (epochs) and batch size (batch_size).\n","* The validation data (X_val, y_val) is used for validation during training."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":47923,"status":"ok","timestamp":1715329950764,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"YDnXsa1DY0EM","outputId":"d097e155-cc5e-42df-ed72-46ab560e18a3"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/5\n","86/86 [==============================] - 17s 106ms/step - loss: 2.3403 - accuracy: 0.4658 - val_loss: 1.0519 - val_accuracy: 0.4876\n","Epoch 2/5\n","86/86 [==============================] - 6s 73ms/step - loss: 0.8244 - accuracy: 0.6255 - val_loss: 0.9886 - val_accuracy: 0.5869\n","Epoch 3/5\n","86/86 [==============================] - 7s 83ms/step - loss: 0.6157 - accuracy: 0.7444 - val_loss: 1.0567 - val_accuracy: 0.5445\n","Epoch 4/5\n","86/86 [==============================] - 7s 83ms/step - loss: 0.7017 - accuracy: 0.7109 - val_loss: 0.6807 - val_accuracy: 0.7314\n","Epoch 5/5\n","86/86 [==============================] - 6s 73ms/step - loss: 0.4125 - accuracy: 0.8462 - val_loss: 0.7070 - val_accuracy: 0.7124\n"]}],"source":["history = model_1.fit(\n","    X_train, y_train,\n","    batch_size=batch_size,\n","    epochs=epochs,\n","    validation_data=(X_val, y_val)\n",")"]},{"cell_type":"markdown","metadata":{"id":"2fy3CAoUvubv"},"source":["Plots the training and validation accuracies over epochs"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"elapsed":668,"status":"ok","timestamp":1715329955524,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"2zy9VLudZLsw","outputId":"5845b21f-17c2-4382-e693-221ae3c7d3dc"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.plot(history.history['accuracy'],label='Train')\n","plt.plot(history.history['val_accuracy'],label='Test')\n","plt.title('Model accuracy')\n","plt.ylabel('Model Accuracy')\n","plt.xlabel('Epoch')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"lqKXkT2zv0ng"},"source":["Accuracy and loss on Test-data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1698,"status":"ok","timestamp":1715329960645,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"HzkX1LKVY2G2","outputId":"d7ab88fe-0fa3-4014-ffe5-6aa45b5311a0"},"outputs":[{"name":"stdout","output_type":"stream","text":["22/22 [==============================] - 1s 22ms/step - loss: 0.7070 - accuracy: 0.7124\n","Accuracy on test data: 0.7124087810516357\n"]}],"source":["loss, accuracy = model_1.evaluate(X_val, y_val)\n","print(\"Accuracy on test data:\", accuracy)"]},{"cell_type":"markdown","metadata":{"id":"pFyIEdJGwDiy"},"source":["Saving the trained model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3CdMHVRVcrzD"},"outputs":[],"source":["model_1.save('/content/drive/My Drive/zap/Model_1.h5')"]},{"cell_type":"markdown","metadata":{"id":"azm7DQ6IwXfg"},"source":["# Model-2"]},{"cell_type":"markdown","metadata":{"id":"dvF1vOtTwZrz"},"source":["* Four Conv2D layers with ReLU activation functions followed by MaxPooling2D layers for feature extraction.\n","* A Flatten layer to flatten the 2D feature maps into a 1D vector.\n","* A Dropout layer with a dropout rate of 0.25 to reduce overfitting.\n","* Two Dense layers with ReLU activation, where the last layer has a softmax activation for classification."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2ItZ4Y5UQLHC"},"outputs":[],"source":["model_2 = Sequential([\n","    Conv2D(32, (3, 3), activation='relu', input_shape=(img_width, img_height, 3)),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(32, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Flatten(),\n","    Dense(512, activation='relu'),\n","    Dropout(0.25),\n","    Dense(num_classes, activation='softmax')\n","])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DHfV00VNUF_G"},"outputs":[],"source":["model_2.compile(optimizer=Adam(),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":48899,"status":"ok","timestamp":1715330062026,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"pcChVHPxQMOJ","outputId":"600d99af-e49a-4592-feba-ddfcf170c79a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/5\n","86/86 [==============================] - 10s 65ms/step - loss: 1.0923 - accuracy: 0.4600 - val_loss: 0.6807 - val_accuracy: 0.6847\n","Epoch 2/5\n","86/86 [==============================] - 4s 52ms/step - loss: 0.6052 - accuracy: 0.7378 - val_loss: 0.7019 - val_accuracy: 0.6876\n","Epoch 3/5\n","86/86 [==============================] - 4s 51ms/step - loss: 0.4058 - accuracy: 0.8513 - val_loss: 0.3027 - val_accuracy: 0.9066\n","Epoch 4/5\n","86/86 [==============================] - 4s 48ms/step - loss: 0.3104 - accuracy: 0.8960 - val_loss: 0.3637 - val_accuracy: 0.8818\n","Epoch 5/5\n","86/86 [==============================] - 4s 50ms/step - loss: 0.2568 - accuracy: 0.9105 - val_loss: 0.2278 - val_accuracy: 0.9299\n"]}],"source":["history = model_2.fit(\n","    X_train, y_train,\n","    batch_size=batch_size,\n","    epochs=epochs,\n","    validation_data=(X_val, y_val)\n",")"]},{"cell_type":"markdown","metadata":{"id":"PP0payZDw3-h"},"source":["Plots the training and validation accuracies over epochs"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"elapsed":681,"status":"ok","timestamp":1715330066424,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"L6mLBBUgZOHI","outputId":"54f474d4-5957-4e0c-c53e-9262058df9db"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.plot(history.history['accuracy'],label='Train')\n","plt.plot(history.history['val_accuracy'],label='Test')\n","plt.title('Model accuracy')\n","plt.ylabel('Model Accuracy')\n","plt.xlabel('Epoch')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"l57VgNjqw8D3"},"source":["Accuracy and loss on Test-data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2098,"status":"ok","timestamp":1715330072334,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"L4SCkMNvQq4b","outputId":"3ba4fe8a-d926-4593-8547-355a29f2050d"},"outputs":[{"name":"stdout","output_type":"stream","text":["22/22 [==============================] - 1s 25ms/step - loss: 0.2278 - accuracy: 0.9299\n","Accuracy on test data: 0.9299269914627075\n"]}],"source":["loss, accuracy = model_2.evaluate(X_val, y_val)\n","print(\"Accuracy on test data:\", accuracy)"]},{"cell_type":"markdown","metadata":{"id":"s01ZjJ_iwTPa"},"source":["Saving the model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5479,"status":"ok","timestamp":1715330089913,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"bD8uo86kZ-NJ","outputId":"674f3ff0-c82e-4eae-9451-3204f0c4da1b"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}],"source":["model_2.save('/content/drive/My Drive/zap/Model_2.h5')"]},{"cell_type":"markdown","metadata":{"id":"2eS_7FfdxEAq"},"source":["# Model-3"]},{"cell_type":"markdown","metadata":{"id":"bGbZnkdDxGjz"},"source":["* Six Conv2D layers with ReLU activation functions followed by MaxPooling2D layers for feature extraction.\n","* A Flatten layer to flatten the 2D feature maps into a 1D vector.\n","*  A Dropout layer with a dropout rate of 0.25 to reduce overfitting.\n","* Two Dense layers with ReLU activation, where the last layer has a softmax activation for classification."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lCpy2L8syo08"},"outputs":[],"source":["model_3 = Sequential([\n","    Conv2D(32, (3, 3), activation='relu', input_shape=(img_width, img_height, 3)),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(32, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Flatten(),\n","    Dense(512, activation='relu'),\n","    Dropout(0.25),\n","    Dense(num_classes, activation='softmax')\n","])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"s1fwr3ody38a"},"outputs":[],"source":["model_3.compile(optimizer=Adam(),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":35164,"status":"ok","timestamp":1715330142178,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"FJ34KQ7sy6Bm","outputId":"09da0852-f0b8-4704-d520-c55498d76758"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/5\n","86/86 [==============================] - 11s 65ms/step - loss: 1.1774 - accuracy: 0.4124 - val_loss: 1.0766 - val_accuracy: 0.4701\n","Epoch 2/5\n","86/86 [==============================] - 4s 51ms/step - loss: 1.0441 - accuracy: 0.4935 - val_loss: 0.9318 - val_accuracy: 0.5693\n","Epoch 3/5\n","86/86 [==============================] - 5s 54ms/step - loss: 0.8829 - accuracy: 0.5785 - val_loss: 1.4703 - val_accuracy: 0.3635\n","Epoch 4/5\n","86/86 [==============================] - 4s 51ms/step - loss: 0.8349 - accuracy: 0.5724 - val_loss: 0.6807 - val_accuracy: 0.6599\n","Epoch 5/5\n","86/86 [==============================] - 4s 49ms/step - loss: 0.6822 - accuracy: 0.6593 - val_loss: 0.7253 - val_accuracy: 0.6949\n"]}],"source":["history = model_3.fit(\n","    X_train, y_train,\n","    batch_size=batch_size,\n","    epochs=epochs,\n","    validation_data=(X_val, y_val)\n",")"]},{"cell_type":"markdown","metadata":{"id":"9E-uFmWQxHgw"},"source":["Plots the training and validation accuracies over epochs"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"elapsed":673,"status":"ok","timestamp":1715330145504,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"tywBp7Nny-Kh","outputId":"1645cbb0-e956-4b8e-9e12-837c26b81248"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.plot(history.history['accuracy'],label='Train')\n","plt.plot(history.history['val_accuracy'],label='Test')\n","plt.title('Model accuracy')\n","plt.ylabel('Model Accuracy')\n","plt.xlabel('Epoch')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"yRuw1NKXxMNA"},"source":["Accuracy and loss on Test-data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1952,"status":"ok","timestamp":1715330151565,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"LDLm1S8Ly_eA","outputId":"d2123385-39df-4663-ae42-986dfabadd0c"},"outputs":[{"name":"stdout","output_type":"stream","text":["22/22 [==============================] - 0s 21ms/step - loss: 0.7253 - accuracy: 0.6949\n","Accuracy on test data: 0.6948904991149902\n"]}],"source":["loss, accuracy = model_3.evaluate(X_val, y_val)\n","print(\"Accuracy on test data:\", accuracy)"]},{"cell_type":"markdown","metadata":{"id":"5vXxu-f2xPAL"},"source":["Saving the model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":394,"status":"ok","timestamp":1715330193797,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"AhW8AILZpVsB","outputId":"43f6fbae-f5ec-4779-8143-f737973ca0be"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}],"source":["model_3.save('/content/drive/My Drive/zap/Model_3.h5')"]},{"cell_type":"markdown","metadata":{"id":"vDab1o4TyzGr"},"source":["# 3. Selection of Model"]},{"cell_type":"markdown","metadata":{"id":"wh_LbkXny7hh"},"source":["**Model-1:**\n","* Loss: 0.7070\n","* Accuracy: 0.7124\n","\n","**Summary:**\n","* Model-1 achieves a moderate accuracy of approximately 71.24% on the test data. However, it exhibits a relatively high loss value, indicating suboptimal performance compared to other models.\n","\n","**Model-2:**\n","* Loss: 0.2278\n","* Accuracy: 0.9299\n","\n","**Summary:**\n","* Model-2 demonstrates superior performance with a significantly lower loss of 0.2278 and a substantially higher accuracy of approximately 92.99% on the test data.\n","\n","**Model-3:**\n","* Loss: 0.7253\n","* Accuracy: 0.6949\n","\n","**Summary:**\n","* Model-3 exhibits the lowest accuracy of approximately 69.49% on the test data, along with a relatively high loss value of 0.7253.It's performance in terms of accuracy and loss is inferior compared to both Model-1 and Model-2.\n","\n","**Conclusion:**\n","Model-2 outperforms both Model-1 and Model-3 in terms of accuracy and loss metrics, demonstrating a significant improvement in predictive performance. Therefore, Model-2 is the best among three."]},{"cell_type":"markdown","metadata":{"id":"XH9cgpJmyDEA"},"source":["# 4.Testing"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k1Kz-spktkL7"},"outputs":[],"source":["import numpy as np\n","from PIL import Image\n","\n","def predict_image_class(image_path, model, class_names):\n","    img = Image.open(image_path)\n","    img = img.resize((224, 224))\n","    img_array = np.array(img) / 255.0\n","    img_array = np.expand_dims(img_array, axis=0)\n","    predictions = model.predict(img_array)\n","    predicted_class_index = np.argmax(predictions)\n","    predicted_class_name = class_names[predicted_class_index]\n","    return predicted_class_name"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":857,"status":"ok","timestamp":1715330724699,"user":{"displayName":"Aditya Raj Aditya","userId":"11705090696589810642"},"user_tz":-330},"id":"KBuIEErutloE","outputId":"d9953914-4560-4de8-cd42-e6795faff7bb"},"outputs":[{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 44ms/step\n","Predicted Class: Canker\n"]}],"source":["class_names = ['Black spot', 'Canker', 'Greening', 'Healthy']\n","predicted_class = predict_image_class('/content/drive/My Drive/zap/Validation/Canker/Image (154).png', model_2, class_names)\n","print(\"Predicted Class:\", predicted_class)"]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.5"}},"nbformat":4,"nbformat_minor":0}
